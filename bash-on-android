#!/bin/sh
# -*-makefile-gmake-*- \
# the next line restarts using GNU Make \
exec make -f "$0" ${1+"$@"}

# user-overridable vars
NDK := /opt/s/android-ndk-r10e
VER := 4.4-beta
SRC := bash-$(VER).tar.gz
ARCH := arm
TARGET := $(ARCH)-linux-androideabi
PLATFORM := android-9
# expected directory after unpacking the tarball
src.dir := $(basename $(basename $(SRC)))



.DELETE_ON_ERROR:
pp-%:
	@echo "$(strip $($*))" | tr ' ' \\n

mk := $(realpath $(lastword $(MAKEFILE_LIST)))
mk.dir := $(dir $(mk))

define help :=
Cross-compiles bash $(VER) w/ Android NDK.

Quick build:

	$$ $(notdir $(mk)) NDK=$(NDK) compile

NDK is a path to the installed Android NDK.
Override some defaults (everything is case-sensitive):

	$$ $(notdir $(mk)) NDK=$(NDK) SRC=$(SRC) TARGET=$(TARGET) PLATFORM=$(PLATFORM) ARCH=$(ARCH) compile

Targets:
	unpack
	toolchain
	config
	patch
	compile
	clean
endef

.PHONY: help
help:
	$(info $(help))@:



bash.patch := $(mk.dir)/bash-on-android.data
buildroot := build-$(ARCH)-bash-$(VER)
toolchain.dir := android-toolchain-$(TARGET)

path.modified :=
path.orig := $(PATH)
path = $(if $(1),$(realpath $(toolchain.dir))/bin:$(path.orig),$(path.orig))

export PATH = $(call path,$(path.modified))
export CC := $(TARGET)-gcc
export LD := $(TARGET)-ld
export AS := $(TARGET)-as

unpack.target := $(src.dir)/.gmake.unpack
.PHONY: unpack
unpack: $(unpack.target)
$(unpack.target): $(SRC)
	tar xfz $<
	touch $@

toolchain.target := $(toolchain.dir)/.gmake.toolchain
.PHONY: toolchain
toolchain: $(toolchain.target)
$(toolchain.target):
	$(NDK)/build/tools/make-standalone-toolchain.sh \
		--platform=$(PLATFORM) --install-dir=$(toolchain.dir) \
		--arch=$(ARCH)
	touch $@

$(buildroot):
	mkdir -p $(@)

# FIXME: patch aclocal.m4 instead
export bash_cv_job_control_missing := present
config.target := $(buildroot)/.gmake.config
.PHONY: config
config: $(config.target)
$(config.target): $(toolchain.target) $(unpack.target) | $(buildroot)
	$(eval path.modified:=1)
	cd $(buildroot) && $(realpath $(src.dir))/configure --host=$(TARGET) \
		--disable-nls \
		--enable-static-link \
		--with-bash-malloc=no
	touch $@

patch.target := $(src.dir)/.gmake.patch
.PHONY: patch
patch: $(patch.target)
$(patch.target): | $(config.target)
	cd $(src.dir) && patch -p1 < $(bash.patch)
	touch $@

compile.target := $(buildroot)/.gmake.compile
.PHONY: compile
compile: $(compile.target)
$(compile.target): $(patch.target)
	$(eval path.modified:=1)
	cd $(buildroot) && make
	touch $@

.PHONY: clean
clean:
	rm -rf $(buildroot) $(src.dir) $(toolchain.dir)
